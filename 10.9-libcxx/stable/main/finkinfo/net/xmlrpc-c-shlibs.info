Info3: <<
# Shlibs-only stub
Package: xmlrpc-c-shlibs
Version: 1.16.44
Revision: 2
Distribution: 10.9, 10.10, 10.11, 10.12, 10.13, 10.14, 10.14.5, 10.5, 11.0, 11.3
Maintainer: David Fang <fangism@users.sourceforge.net>
Description: XML-RPC module for C,C++
Homepage: https://xmlrpc-c.sourceforge.net/
Source: mirror:sourceforge:xmlrpc-c/xmlrpc-c-%v.tgz
Source-Checksum: SHA256(359e1f41da5c46cb82eecc042ae215f53571189388ee45c563ed40d7e5deb6f7)
License: BSD
DescDetail: <<
XML-RPC is a quick-and-easy way to make procedure calls over the Internet.
It converts the procedure call into an XML document, sends it to a remote 
server using HTTP, and gets back the response as XML.
.
This library provides a modular implementation of XML-RPC for C and C++.
.
The library also provides limited facilities for the common variation on 
XML-RPC that uses HTTPS (SSL encryption).
.
The library also provides a variation on XML-RPC that works better in some 
cases (but is not standard): packet stream XML-RPC.
.
XML-RPC For C and C++ is designed for Unix and is most tested on unix. 
As far as we know, it works on any reasonably standard unix. 
<<
BuildDepends: <<
	fink-package-precedence,
	libcurl4
<<
Conflicts: <<
	xmlrpc-c (<= 1.16.44-1)
<<
Replaces: <<
	xmlrpc-c (<= 1.16.44-1)
<<
PatchScript: <<
	#!/bin/sh -ev
	sed -i.orig -e '/-flat_namespace/s|space|& -install_name $(LIBINST_DIR)/$(SONAME)|' config.mk.in
	pushd lib/curl_transport
	for f in curlmulti.c curltransaction.c xmlrpc_curl_transport.c
	do sed -i.orig -e 's|curl/types.h|curl/curl.h|' $f
	done
	popd
	# use a more-portable/more-standard #include
	perl -pi.bak -e 's,sys/unistd.h,unistd.h,' src/cpp/test/server_abyss.cpp
	# enable dependency tracking the (very) hard way
	perl -pi.bak -e 's/(_COMMON = -DNDEBUG)/\1 -MD/' common.mk
<<
ConfigureParams: --disable-static --disable-libwww-client
CompileScript: <<
	#!/bin/sh -ev
	./configure %c
	# not quite parallel-safe, so brute-force it... try again
	make -k || make
	fink-package-precedence --depfile-ext='\.d' --prohibit-bdep=%n .
<<
InstallScript: <<
	#!/bin/sh -ev
	make DESTDIR=%d install
	rm -r %i/bin
	rm -r %i/include
	rm -r %i/lib/lib*.a
	rm -r %i/lib/libxmlrpc.dylib
	rm -r %i/lib/libxmlrpc.3.dylib
	for dylib in ++ _abyss _client++ _client _cpp _packetsocket _server++ _server _server_abyss++ _server_abyss _server_cgi++ _server_cgi _server_pstream++ _util _xmlparse _xmltok; do
		rm -r %i/lib/libxmlrpc$dylib.dylib
		rm -r %i/lib/libxmlrpc$dylib.[34].dylib
	done
<<
DocFiles: README doc/*
Shlibs: <<
	%p/lib/libxmlrpc++.4.16.dylib	0.0.0	%n (>= 1.16.41-1)
	%p/lib/libxmlrpc.3.16.dylib	0.0.0	%n (>= 1.16.41-1)
	%p/lib/libxmlrpc_abyss.3.16.dylib	0.0.0	%n (>= 1.16.41-1)
	%p/lib/libxmlrpc_client++.4.16.dylib	0.0.0	%n (>= 1.16.41-1)
	%p/lib/libxmlrpc_client.3.16.dylib	0.0.0	%n (>= 1.16.41-1)
	%p/lib/libxmlrpc_cpp.4.16.dylib	0.0.0	%n (>= 1.16.41-1)
	%p/lib/libxmlrpc_packetsocket.4.16.dylib	0.0.0	%n (>= 1.16.41-1)
	%p/lib/libxmlrpc_server++.4.16.dylib	0.0.0	%n (>= 1.16.41-1)
	%p/lib/libxmlrpc_server.3.16.dylib	0.0.0	%n (>= 1.16.41-1)
	%p/lib/libxmlrpc_server_abyss++.4.16.dylib	0.0.0	%n (>= 1.16.41-1)
	%p/lib/libxmlrpc_server_abyss.3.16.dylib	0.0.0	%n (>= 1.16.41-1)
	%p/lib/libxmlrpc_server_cgi++.4.16.dylib	0.0.0	%n (>= 1.16.41-1)
	%p/lib/libxmlrpc_server_cgi.3.16.dylib	0.0.0	%n (>= 1.16.41-1)
	%p/lib/libxmlrpc_server_pstream++.4.16.dylib	0.0.0	%n (>= 1.16.41-1)
	%p/lib/libxmlrpc_util.3.16.dylib	0.0.0	%n (>= 1.16.41-1)
	%p/lib/libxmlrpc_xmlparse.3.16.dylib	0.0.0	%n (>= 1.16.41-1)
	%p/lib/libxmlrpc_xmltok.3.16.dylib	0.0.0	%n (>= 1.16.41-1)
<<
DescPackaging: <<
Disabling/conflicting libwww, as that seems to cause a test failure.
<<
<<
