Package: nut
Version: 2.8.0
Revision: 1

Depends: <<
	libupsclient6-shlibs (>= %v-%r),
	openssl,
	openssl300-shlibs
<<
BuildDepends: <<
	asciidoc,
	autoconf2.6,
	automake1.15,
	fink (>= 0.30.0),
	fink-package-precedence,
	gd3,
	libavahi-client3-dev,
	libavahi-common3-dev,
	libavahi-core7-dev,
	libnetsnmp40-dev,
	libtool2,
	libusb1,
	neon27,
	openssl300-dev,
	pkgconfig
<<
Recommends: nut-cgi, nut-usb
Suggests: nut-snmp, nut-xml
GCC: 4.0

Source: http://www.networkupstools.org/source/2.8/%n-%v.tar.gz
Source-Checksum: SHA256(c3e5a708da797b7c70b653d37b1206a000fcb503b85519fe4cdf6353f792bfe5)

DocFiles: AUTHORS ChangeLog COPYING INSTALL MAINTAINERS NEWS README UPGRADING

# Don't play games to try to access /usr/local even more than our
# compilers already unavoidably do
PatchFile2: nut-isystem.patch
PatchFile2-MD5: e1a25c37e96cc7b72ce23e55b11956a1
# local -I before global
PatchFile3: nut-flag-ordering.patch
PatchFile3-MD5: 17c51c8dddf1ac566b65cbf81e7dd4d5
PatchScript: <<
	%{default_script}

	# harden the build
	perl -pi -e 's/(-version-info)/-no-undefined \1/' clients/Makefile.am
#	^-- .am not .in because we regenerate autotools

	# Upstream patch for more-portable struct stat. See:
	# https://github.com/networkupstools/nut/issues/1415
	perl -pi -e 's/st_mtim.tv_sec/st_mtime/g' drivers/dummy-ups.c
<<

# cppcheck is experimental and fink's package has BDep:python that
# seems to cause some problems itself
ConfigureParams: <<
  --enable-option-checking=fatal \
  --enable-dependency-tracking \
  --with-ssl \
  --with-cgi \
  --with-dev \
  --disable-cppcheck \
  --disable-static \
  --with-cgipath=%p/lib/nut-cgi-bin \
  --with-gd-includes=-I%p/include \
  --with-gd-libs='-L%p/lib -lgd'\
  --mandir=%p/share/man   \
  --infodir=%p/share/info \
  --datadir=%p/share/nut  \
  --with-htmlpath=%p/share/nut/html  \
  --with-drvpath=%p/lib/nut \
  --with-pkgconfig-dir=%p/lib/pkgconfig \
  --with-statepath=%p/var/run/ups \
  --with-pidpath=%p/var/run \
  --sysconfdir=%p/etc/nut
<<
CompileScript: <<
	autoreconf -fi
	%{default_script}
	fink-package-precedence --prohibit-bdep=libupsclient6-dev,libnutclient2-dev .
<<

InstallScript: <<
#!/bin/sh -ex
   make -j1 DESTDIR=%d install
   install -d -m 755 %i/share/doc/%n
   cp -pr docs %i/share/doc/%n
   install -d -m 775 %i/var/run/ups
   mkdir -p %i/etc/bash_completion.d
   install scripts/misc/nut.bash_completion %i/etc/bash_completion.d/nut

   # Duplicate copy:
   rm -rf %i/share/doc/nut/docs/man

   # If we package the nut-scanner stuff, be sure to add libtool* dependencies:
   rm -f %i/lib/libnutscan* %i/lib/pkgconfig/libnutscan.pc %i/bin/nut-scanner %i/share/man/man8/nut-scanner.8 %i/include/nut-scan.h %i/include/nutscan-* %i/share/man/man3/nutscan*

<<

PostInstScript: <<
   chmod 775 %p/var/run/ups
   chgrp nobody %p/var/run/ups
<<

SplitOff: <<
   Package: libupsclient6-shlibs
   Depends: <<
      openssl300-shlibs
   <<
   DocFiles: COPYING README
   Files: <<
      lib/libupsclient.6.dylib
   <<
   Shlibs: <<
      %p/lib/libupsclient.6.dylib 7.0.0 libupsclient6-shlibs (>= 2.8.0-1)
   <<
   Description: Network UPS Tools - network client library
<<

SplitOff2: <<
   Package: libupsclient6-dev
   Depends: libupsclient6-shlibs (= %v-%r)
   Conflicts: libupsclient-dev
   Replaces: libupsclient-dev
   BuildDependsOnly: true
   Files: <<
      lib/libupsclient.{dylib,la}
      lib/pkgconfig/libupsclient.pc
      share/man/man3/upscli*
      include/parseconf.h
      include/upsclient.h
   <<
   Description: Network UPS Tools - client dev headers
<<

SplitOff3: <<
   Package: libnutclient2-shlibs
   DocFiles: COPYING README
   Files: <<
      lib/libnutclient.2.dylib
      lib/libnutclientstub.1.dylib
   <<
   Shlibs: <<
      %p/lib/libnutclient.2.dylib 3.0.0 libnutclient2-shlibs (>= 2.8.0-0)
      %p/lib/libnutclientstub.1.dylib 2.0.0 libnutclient2-shlibs (>= 2.8.0-0)
   <<
   Description: Network UPS Tools - C++ client library
<<

SplitOff4: <<
   Package: libnutclient2-dev
   Depends: libnutclient2-shlibs (= %v-%r)
   Conflicts: libnutclient-dev
   Replaces: libnutclient-dev
   BuildDependsOnly: true
   Files: <<
      lib/libnutclient.{dylib,la}
      lib/libnutclientstub.{dylib,la}
      lib/pkgconfig/libnutclient.pc
      lib/pkgconfig/libnutclientstub.pc
      share/man/man3/*nutclient*
      include/nutclient.h
      include/nutclientmem.h
   <<
   Description: Network UPS Tools - C++ dev headers
<<

SplitOff5: <<
  Package: %N-cgi
  Depends: <<
    libupsclient6-shlibs (>= %v-%r),
    gd3-shlibs,
    openssl300-shlibs
  <<
  Files: <<
    lib/nut-cgi-bin
    share/nut/html/*
    share/man/man5/upsstats.html.5
    share/man/man5/hosts.conf.5
    share/man/man5/upsset.conf.5
    share/man/man8/upsimage.cgi.8
    share/man/man8/upsset.cgi.8
    share/man/man8/upsstats.cgi.8
  <<
  Description: Network UPS Tools - CGI graphing tools
<<

SplitOff6: <<
  Package: %N-usb
  Depends: <<
    %N (>= %v-%r),
    libusb1-shlibs
  <<
  Files: <<
    lib/nut/bcmxcp_usb
    lib/nut/blazer_usb
    lib/nut/nutdrv_atcl_usb
    lib/nut/nutdrv_qx
    lib/nut/richcomm_usb
    lib/nut/riello_usb
    lib/nut/tripplite_usb
    lib/nut/usbhid-ups
    share/man/man8/bcmxcp_usb.8
    share/man/man8/blazer_usb.8
    share/man/man8/nutdrv_atcl_usb.8
    share/man/man8/nutdrv_qx.8
    share/man/man8/richcomm_usb.8
    share/man/man8/riello_usb.8
    share/man/man8/tripplite_usb.8
    share/man/man8/usbhid-ups.8
  <<
  Description: Network UPS Tools - USB drivers
<<

SplitOff7: <<
  Package: %N-snmp
  Depends: <<
    %N (>= %v-%r),
    libnetsnmp40-shlibs
  <<
  Files: <<
    lib/nut/snmp-ups
    share/man/man8/snmp-ups.8
  <<
  Description: Network UPS Tools - SNMP driver
<<

SplitOff8: <<
  Package: %N-xml
  Depends: <<
    %N (>= %v-%r),
    neon27-shlibs
  <<
  Files: <<
    lib/nut/netxml-ups
    share/man/man8/netxml-ups.8
  <<
  Description: Network UPS Tools - XML driver
<<

Description: Network UPS Tools - core
DescDetail: <<
NUT is a client/server uninterruptible power supply (UPS) monitoring system
that permits the sharing of one (or more) UPS between several machines.  The
'server' monitors the UPS and notifies the 'clients' when the UPS is on
battery or has a low battery.

If you have a serial UPS, you will need a USB-to-serial converter and OS X
drivers for the converter. In this case, install the base "nut" package.

If your UPS connects via a USB cable, install the "nut-usb" package. This
covers most APC Back-UPS models, as well as MGE Ellipse, Comet, Nova,
Evolution, and Protection Center units. Some Belkin models may be supported.
Tripp Lite USB models that use usbhid-ups (especially ones with LCD in their
name) should work, but the tripplite_usb driver currently cannot open
entry-level Tripp Lite USB devices on Mac OS X.

If you have a MGE UPS with a Network Management Card that supports the XML/HTTP
protocol, then you will want the "nut-xml" package.

The "newhidups" driver was renamed "usbhid-ups" after the 2.0.5 release.

To graphically view the status of your UPSes, install the "nut-cgi" package.
<<

DescUsage:<<
You will need to read the documentation in %p/share/doc/%n/docs to learn how to
set up NUT to monitor your UPS and shut down your machine when the UPS battery
is low.

Note that some USB UPSes may already be supported by OS X, and the NUT drivers
may have trouble interoperating. If your UPS shows up in the Energy control
panel, and you want to forward status to other systems, you can use the
macosx-ups driver.

If you have any questions, please consult the nut-users list:
http://www.networkupstools.org/support.html#_request_help
<<

DescPackaging:<<
The nut-scanner binary (and its horde of dependencies) has not been packaged yet.
<<

License: GPL/OpenSSL
Homepage: http://www.networkupstools.org/
Maintainer: Charles Lepple <clepple+fink@ghz.cc>
