diff -ruN yt-dlp-2024.05.27-orig/Makefile yt-dlp-2024.05.27/Makefile
--- yt-dlp-2024.05.27-orig/Makefile	2024-05-27 18:35:55.000000000 -0400
+++ yt-dlp-2024.05.27/Makefile	2024-06-18 04:17:56.000000000 -0400
@@ -77,7 +77,7 @@
 	$(PYTHON) -m pytest -Werror
 	$(MAKE) codetest
 
-offlinetest: codetest
+offlinetest:
 	$(PYTHON) -m pytest -Werror -m "not download"
 
 CODE_FOLDERS_CMD = find yt_dlp -type f -name '__init__.py' | sed 's,/__init__.py,,' | grep -v '/__' | sort
diff -ruN yt-dlp-2024.05.27-orig/README.md yt-dlp-2024.05.27/README.md
--- yt-dlp-2024.05.27-orig/README.md	2024-05-27 17:35:55.000000000 -0500
+++ yt-dlp-2024.05.27/README.md	2024-06-15 08:38:25.000000000 -0500
@@ -1121,9 +1121,9 @@
 
     See also: [Notes about environment variables](#notes-about-environment-variables)
 1. **System Configuration**:
-    * `/etc/yt-dlp.conf`
-    * `/etc/yt-dlp/config`
-    * `/etc/yt-dlp/config.txt`
+    * `@FINK_PREFIX@/etc/yt-dlp.conf`
+    * `@FINK_PREFIX@/etc/yt-dlp/config`
+    * `@FINK_PREFIX@/etc/yt-dlp/config.txt`
 
 E.g. with the following configuration file yt-dlp will always extract the audio, not copy the mtime, use a proxy and save all videos under `YouTube` directory in your home directory:
 ```
@@ -1893,8 +1893,8 @@
       * `~/.yt-dlp/plugins/<package name>/yt_dlp_plugins/`
       * `~/yt-dlp-plugins/<package name>/yt_dlp_plugins/`
     * **System Plugins**
-      * `/etc/yt-dlp/plugins/<package name>/yt_dlp_plugins/`
-      * `/etc/yt-dlp-plugins/<package name>/yt_dlp_plugins/`
+      * `@FINK_PREFIX@/etc/yt-dlp/plugins/<package name>/yt_dlp_plugins/`
+      * `@FINK_PREFIX@/etc/yt-dlp-plugins/<package name>/yt_dlp_plugins/`
 2. **Executable location**: Plugin packages can similarly be installed in a `yt-dlp-plugins` directory under the executable location (recommended for portable installations):
     * Binary: where `<root-dir>/yt-dlp.exe`, `<root-dir>/yt-dlp-plugins/<package name>/yt_dlp_plugins/`
     * Source: where `<root-dir>/yt_dlp/__main__.py`, `<root-dir>/yt-dlp-plugins/<package name>/yt_dlp_plugins/`
diff -ruN yt-dlp-2024.05.27-orig/test/test_config.py yt-dlp-2024.05.27/test/test_config.py
--- yt-dlp-2024.05.27-orig/test/test_config.py	2024-05-27 18:35:55.000000000 -0400
+++ yt-dlp-2024.05.27/test/test_config.py	2024-06-18 04:18:31.000000000 -0400
@@ -68,9 +68,9 @@
             Path(home_dir, '.yt-dlp', 'config.txt'),
         ],
         'System': [
-            Path('/etc/yt-dlp.conf'),
-            Path('/etc/yt-dlp/config'),
-            Path('/etc/yt-dlp/config.txt'),
+            Path('@FINK_PREFIX@/etc/yt-dlp.conf'),
+            Path('@FINK_PREFIX@/etc/yt-dlp/config'),
+            Path('@FINK_PREFIX@/etc/yt-dlp/config.txt'),
         ]
     }
 
diff -ruN yt-dlp-2024.05.27-orig/yt_dlp/update.py yt-dlp-2024.05.27/yt_dlp/update.py
--- yt-dlp-2024.05.27-orig/yt_dlp/update.py	2024-05-27 17:35:55.000000000 -0500
+++ yt-dlp-2024.05.27/yt_dlp/update.py	2024-06-15 08:50:54.000000000 -0500
@@ -118,7 +118,7 @@
     **{variant: f'Auto-update is not supported for unpackaged {name} executable; Re-download the latest release'
        for variant, name in {'win32_dir': 'Windows', 'darwin_dir': 'MacOS', 'linux_dir': 'Linux'}.items()},
     'source': 'You cannot update when running from source code; Use git to pull the latest changes',
-    'unknown': 'You installed yt-dlp from a manual build or with a package manager; Use that to update',
+    'unknown': 'You installed yt-dlp with Fink; Please use "fink selfupdate && fink -m install yt-dlp" to update.',
     'other': 'You are using an unofficial build of yt-dlp; Build the executable again',
 }
 
diff -ruN yt-dlp-2024.05.27-orig/yt_dlp/utils/_utils.py yt-dlp-2024.05.27/yt_dlp/utils/_utils.py
--- yt-dlp-2024.05.27-orig/yt_dlp/utils/_utils.py	2024-05-27 17:35:55.000000000 -0500
+++ yt-dlp-2024.05.27/yt_dlp/utils/_utils.py	2024-06-15 08:40:31.000000000 -0500
@@ -4684,8 +4684,8 @@
 
 
 def get_system_config_dirs(package_name):
-    # /etc/package_name
-    yield os.path.join('/etc', package_name)
+    # @FINK_PREFIX@/etc/package_name
+    yield os.path.join('@FINK_PREFIX@/etc', package_name)
 
 
 def time_seconds(**kwargs):
