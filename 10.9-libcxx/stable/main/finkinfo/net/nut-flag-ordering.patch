diff -Nurd nut-2.8.0.orig/clients/Makefile.am nut-2.8.0/clients/Makefile.am
--- nut-2.8.0.orig/clients/Makefile.am	2022-04-26 18:03:35.000000000 -0400
+++ nut-2.8.0/clients/Makefile.am	2023-03-26 02:38:45.000000000 -0400
@@ -18,15 +18,15 @@
   LDADD += $(LIBSSL_LIBS)
 endif
 
-# Avoid per-target CFLAGS, because this will prevent re-use of object
+# Avoid per-target CPPFLAGS, because this will prevent re-use of object
 # files. In any case, CFLAGS are only -I options, so there is no harm,
 # but only add them if we really use the target.
-AM_CFLAGS = -I$(top_srcdir)/include
+AM_CPPFLAGS = -I$(top_srcdir)/include
 if WITH_SSL
-  AM_CFLAGS += $(LIBSSL_CFLAGS)
+  AM_CPPFLAGS += $(LIBSSL_CFLAGS)
 endif
 if WITH_CGI
-  AM_CFLAGS += $(LIBGD_CFLAGS)
+  AM_CPPFLAGS += $(LIBGD_CFLAGS)
 endif
 
 bin_PROGRAMS = upsc upslog upsrw upscmd
diff -Nurd nut-2.8.0.orig/common/Makefile.am nut-2.8.0/common/Makefile.am
--- nut-2.8.0.orig/common/Makefile.am	2022-04-23 07:56:06.000000000 -0400
+++ nut-2.8.0/common/Makefile.am	2023-03-26 02:38:45.000000000 -0400
@@ -1,6 +1,6 @@
 # Network UPS Tools: common
 
-AM_CFLAGS = -I$(top_srcdir)/include
+AM_CPPFLAGS = -I$(top_srcdir)/include
 
 noinst_LTLIBRARIES = libparseconf.la libcommon.la libcommonclient.la
 libparseconf_la_SOURCES = parseconf.c
diff -Nurd nut-2.8.0.orig/drivers/Makefile.am nut-2.8.0/drivers/Makefile.am
--- nut-2.8.0.orig/drivers/Makefile.am	2022-04-23 07:56:07.000000000 -0400
+++ nut-2.8.0/drivers/Makefile.am	2023-03-26 02:45:01.000000000 -0400
@@ -15,24 +15,24 @@
 
 # most targets are drivers, so make this the default
 LDADD = $(LDADD_DRIVERS_SERIAL)
-# Avoid per-target CFLAGS, because this will prevent re-use of object
-# files. In any case, CFLAGS are only -I options, so there is no harm,
+# Avoid per-target CPPFLAGS, because this will prevent re-use of object
+# files. In any case, CPPFLAGS are only -I options, so there is no harm,
 # but only add them if we really use the target.
-AM_CFLAGS = -I$(top_srcdir)/include
+AM_CPPFLAGS = -I$(top_srcdir)/include
 if WITH_USB
-  AM_CFLAGS += $(LIBUSB_CFLAGS)
+  AM_CPPFLAGS += $(LIBUSB_CFLAGS)
 endif
 if WITH_NEON
-  AM_CFLAGS += $(LIBNEON_CFLAGS)
+  AM_CPPFLAGS += $(LIBNEON_CFLAGS)
 endif
 if WITH_LIBPOWERMAN
-  AM_CFLAGS += $(LIBPOWERMAN_CFLAGS)
+  AM_CPPFLAGS += $(LIBPOWERMAN_CFLAGS)
 endif
 if WITH_IPMI
-  AM_CFLAGS += $(LIBIPMI_CFLAGS)
+  AM_CPPFLAGS += $(LIBIPMI_CFLAGS)
 endif
 if WITH_MODBUS
-  AM_CFLAGS += $(LIBMODBUS_CFLAGS)
+  AM_CPPFLAGS += $(LIBMODBUS_CFLAGS)
 endif
 
 SERIAL_DRIVERLIST = al175 bcmxcp belkin belkinunv bestfcom	\
@@ -110,7 +110,7 @@
 upsdrvctl_SOURCES = upsdrvctl.c
 upsdrvctl_LDADD = $(LDADD_COMMON)
 
-# serial drivers: all of them use standard LDADD and CFLAGS
+# serial drivers: all of them use standard LDADD and CPPFLAGS
 al175_SOURCES = al175.c
 apcsmart_SOURCES = apcsmart.c apcsmart_tabs.c
 apcsmart_old_SOURCES = apcsmart-old.c
@@ -161,14 +161,14 @@
 riello_ser_SOURCES = riello.c riello_ser.c
 riello_ser_LDADD = $(LDADD) -lm
 
-# non-serial drivers: these use custom LDADD and/or CFLAGS
+# non-serial drivers: these use custom LDADD and/or CPPFLAGS
 
 # dummy
 dummy_ups_SOURCES = dummy-ups.c
-dummy_ups_CFLAGS = $(AM_CFLAGS) -I$(top_srcdir)/clients
+dummy_ups_CPPFLAGS = -I$(top_srcdir)/clients $(AM_CPPFLAGS)
 dummy_ups_LDADD = $(LDADD_DRIVERS) $(top_builddir)/clients/libupsclient.la
 if WITH_SSL
-  dummy_ups_CFLAGS += $(LIBSSL_CFLAGS)
+  dummy_ups_CPPFLAGS += $(LIBSSL_CFLAGS)
   dummy_ups_LDADD += $(LIBSSL_LIBS)
 endif
 
@@ -178,7 +178,7 @@
 
 # apcupsd client driver
 apcupsd_ups_SOURCES = apcupsd-ups.c
-apcupsd_ups_CFLAGS = $(AM_CFLAGS)
+apcupsd_ups_CPPFLAGS = $(AM_CPPFLAGS)
 apcupsd_ups_LDADD = $(LDADD_DRIVERS)
 
 # sample skeleton driver
@@ -220,8 +220,8 @@
 
 # HID-over-serial
 mge_shut_SOURCES = usbhid-ups.c libshut.c libhid.c hidparser.c mge-hid.c
-# per-target CFLAGS are necessary here
-mge_shut_CFLAGS = $(AM_CFLAGS) -DSHUT_MODE=1
+# per-target CPPFLAGS are necessary here
+mge_shut_CPPFLAGS = $(AM_CPPFLAGS) -DSHUT_MODE=1
 mge_shut_LDADD = $(LDADD) -lm
 
 # SNMP
@@ -243,8 +243,8 @@
  powerware-mib.c \
  raritan-pdu-mib.c raritan-px2-mib.c \
  xppc-mib.c
-snmp_ups_CFLAGS = $(AM_CFLAGS)
-snmp_ups_CFLAGS += $(LIBNETSNMP_CFLAGS)
+snmp_ups_CPPFLAGS = $(AM_CPPFLAGS)
+snmp_ups_CPPFLAGS += $(LIBNETSNMP_CFLAGS)
 snmp_ups_LDADD = $(LDADD_DRIVERS) $(LIBNETSNMP_LIBS) -lm
 
 # NEON XML/HTTP
@@ -262,7 +262,7 @@
 endif
 # FIXME: Hacky hot-fix for build agents of varying OS generations:
 # Different versions of IPMI libs requested 'unsigned int *' or 'int *' args:
-#nut_ipmipsu_CFLAGS = $(AM_CFLAGS) -Wno-pointer-sign
+#nut_ipmipsu_CPPFLAGS = $(AM_CPPFLAGS) -Wno-pointer-sign
 nut_ipmipsu_LDADD = $(LDADD) $(LIBIPMI_LIBS)
 
 # Mac OS X metadriver
@@ -297,13 +297,13 @@
 # nutdrv_qx USB/Serial
 nutdrv_qx_SOURCES = nutdrv_qx.c
 nutdrv_qx_LDADD = $(LDADD_DRIVERS) -lm
-nutdrv_qx_CFLAGS = $(AM_CFLAGS)
+nutdrv_qx_CPPFLAGS = $(AM_CPPFLAGS)
 if WITH_SERIAL
-nutdrv_qx_CFLAGS += -DQX_SERIAL
+nutdrv_qx_CPPFLAGS += -DQX_SERIAL
 nutdrv_qx_LDADD += libdummy_serial.la $(SERLIBS)
 endif
 if WITH_USB
-nutdrv_qx_CFLAGS += -DQX_USB
+nutdrv_qx_CPPFLAGS += -DQX_USB
 nutdrv_qx_SOURCES += $(LIBUSB_IMPL) usb-common.c
 nutdrv_qx_LDADD += $(LIBUSB_LIBS)
 endif
diff -Nurd nut-2.8.0.orig/server/Makefile.am nut-2.8.0/server/Makefile.am
--- nut-2.8.0.orig/server/Makefile.am	2022-04-23 07:56:07.000000000 -0400
+++ nut-2.8.0/server/Makefile.am	2023-03-26 02:38:45.000000000 -0400
@@ -8,12 +8,12 @@
 # Avoid per-target CFLAGS, because this will prevent re-use of object
 # files. In any case, CFLAGS are only -I options, so there is no harm,
 # but only add them if we really use the target.
-AM_CFLAGS = -I$(top_srcdir)/include
+AM_CPPFLAGS = -I$(top_srcdir)/include
 if WITH_WRAP
-  AM_CFLAGS += $(LIBWRAP_CFLAGS)
+  AM_CPPFLAGS += $(LIBWRAP_CFLAGS)
 endif
 if WITH_SSL
-  AM_CFLAGS += $(LIBSSL_CFLAGS)
+  AM_CPPFLAGS += $(LIBSSL_CFLAGS)
 endif
 LDADD = $(top_builddir)/common/libcommon.la $(top_builddir)/common/libparseconf.la $(NETLIBS)
 if WITH_WRAP
diff -Nurd nut-2.8.0.orig/tools/nut-scanner/Makefile.am nut-2.8.0/tools/nut-scanner/Makefile.am
--- nut-2.8.0.orig/tools/nut-scanner/Makefile.am	2022-04-26 18:03:35.000000000 -0400
+++ nut-2.8.0/tools/nut-scanner/Makefile.am	2023-03-26 02:47:49.000000000 -0400
@@ -77,31 +77,31 @@
 # One solution to tackle if needed for those cases would be to make some
 # dynamic/shared libnutcommon (etc.)
 libnutscan_la_LDFLAGS += -export-symbols-regex '^(nutscan_|nut_debug_level|s_upsdebugx|max_threads|curr_threads)'
-libnutscan_la_CFLAGS = -I$(top_srcdir)/clients -I$(top_srcdir)/include \
-			$(LIBLTDL_CFLAGS) -I$(top_srcdir)/drivers
+libnutscan_la_CPPFLAGS = -I$(top_srcdir)/clients -I$(top_srcdir)/include \
+			-I$(top_srcdir)/drivers $(LIBLTDL_CFLAGS)
 
 nut_scanner_SOURCES = nut-scanner.c
-nut_scanner_CFLAGS = -I$(top_srcdir)/clients -I$(top_srcdir)/include
+nut_scanner_CPPFLAGS = -I$(top_srcdir)/clients -I$(top_srcdir)/include
 nut_scanner_LDADD = libnutscan.la
 
 if WITH_SSL
-  libnutscan_la_CFLAGS += $(LIBSSL_CFLAGS)
+  libnutscan_la_CPPFLAGS += $(LIBSSL_CFLAGS)
   libnutscan_la_LIBADD += $(LIBSSL_LIBS)
 endif
 if WITH_USB
-  libnutscan_la_CFLAGS += $(LIBUSB_CFLAGS)
+  libnutscan_la_CPPFLAGS += $(LIBUSB_CFLAGS)
 endif
 if WITH_SNMP
-  libnutscan_la_CFLAGS += $(LIBNETSNMP_CFLAGS)
+  libnutscan_la_CPPFLAGS += $(LIBNETSNMP_CFLAGS)
 endif
 if WITH_NEON
-  libnutscan_la_CFLAGS += $(LIBNEON_CFLAGS)
+  libnutscan_la_CPPFLAGS += $(LIBNEON_CFLAGS)
 endif
 if WITH_AVAHI
-  libnutscan_la_CFLAGS += $(LIBAVAHI_CFLAGS)
+  libnutscan_la_CPPFLAGS += $(LIBAVAHI_CFLAGS)
 endif
 if WITH_IPMI
-  libnutscan_la_CFLAGS += $(LIBIPMI_CFLAGS)
+  libnutscan_la_CPPFLAGS += $(LIBIPMI_CFLAGS)
 endif
 
 # C is not a header, but there is no dist_noinst_SOURCES
