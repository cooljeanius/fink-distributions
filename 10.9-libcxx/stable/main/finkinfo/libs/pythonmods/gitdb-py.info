Info2: <<
# in maintenance mode according to upstream
Package: gitdb-py%type_pkg[python]
Version: 4.0.11
Revision: 1
Description: Pure-Python git object database
License: OSI-Approved
Maintainer: None <fink-devel@lists.sourceforge.net>

Source: https://files.pythonhosted.org/packages/source/g/gitdb/gitdb-%v.tar.gz
Source-Checksum: SHA256(bf5421126136d6d0af55bc1e7c1af1c397a34f5b7bd79e776cd3e89785c2b04b)
Type: python (3.7 3.8 3.9 3.10)
Depends: <<
	python%type_pkg[python],
	smmap-py%type_pkg[python] (>= 3.0.1)
<<

CompileScript: <<
	%p/bin/python%type_raw[python] setup.py build
	%p/bin/python%type_raw[python] setup.py build_ext -i
<<
# Tests expect sourcetree to be a git checkout to run tests on
#InfoTest: <<
#	TestDepends: <<
#		pytest-py%type_pkg[python]
#	<<
#	TestScript: <<
#		#!/bin/sh -ev
#		%p/bin/python%type_raw[python] -m pytest -p no:relaxed -p no:randomly --cov=gitdb gitdb -vv || exit 2
#	<<
#<<
InstallScript: <<
	%p/bin/python%type_raw[python] setup.py install --root %d
<<

DocFiles: AUTHORS LICENSE README.rst
Homepage: https://pypi.org/project/gitdb
DescDetail: <<
The GitDB project models a standard git object database and implements
it in pure python. This means that data, being classified by one of
four types, can can be stored in the database and will in future be
referred to by the generated SHA1 key, which is a 20 byte string
within python.

GitDB implements RW access to loose objects, as well as RO access to
packed objects. Compound Databases allow to combine multiple object
databases into one.

All data is read and written using streams, which effectively prevents
more than a chunk of the data being kept in memory at once mostly.
<<
DescPackaging: <<
Previous maintainer: Kurt Schwehr <goatbar@users.sourceforge.net>
<<

# Info2
<<
