Info2: <<

Package: dill-py%type_pkg[python]
Version: 0.3.7
Revision: 2
Description: Serialize all of Python
License: OSI-Approved
Maintainer: None <fink-devel@lists.sourceforge.net>
Type: python (3.7)

Depends: <<
	python%type_pkg[python]
<<
BuildDepends: <<
	bootstrap-modules-py%type_pkg[python],
	setuptools-tng-py%type_pkg[python]
<<

Source: https://files.pythonhosted.org/packages/source/d/dill/dill-%v.tar.gz
Source-Checksum: SHA256(cc1c8b182eb3013e24bd475ff2e9295af86c1a38eb1aff128dac8962a9ce3c03)

CompileScript: <<
	PYTHONPATH=%p/share/bootstrap-modules-python%type_pkg[python] %p/bin/python%type_raw[python] -m build --wheel --no-isolation --skip-dependency-check
<<
InfoTest: <<
	TestScript: <<
		PYTHONPATH=%b/build/lib %p/bin/python%type_raw[python] dill/tests/__main__.py || exit 2
	<<
<<

InstallScript: <<
	#!/bin/sh -ev
	PYTHONPATH=%p/share/bootstrap-modules-python%type_pkg[python] %p/bin/python%type_raw[python] -m installer --destdir %d dist/*.whl
	for i in undill get_gprof get_objgraph ; do
		mv %i/bin/$i %i/bin/$i-py%type_raw[python]
	done
<<
PostInstScript: <<
	# get rid of old incorrect u-a that might still be around
	update-alternatives --auto dill
	if [ -f %p/bin/dill-py ]; then
		update-alternatives --verbose --remove dill %p/bin/dill-py%type_raw[python]
	fi

	update-alternatives --verbose --install %p/bin/undill undill %p/bin/undill-py%type_raw[python] %type_pkg[python] \
		--slave %p/bin/get_gprof get_gprof %p/bin/get_gprof-py%type_raw[python] \
		--slave %p/bin/get_objgraph get_objgraph %p/bin/get_objgraph-py%type_raw[python]
<<
PreRmScript: <<
	# get rid of old incorrect u-a that might still be around
	update-alternatives --auto dill
	if [ -f %p/bin/dill-py ]; then
		update-alternatives --verbose --remove dill %p/bin/dill-py%type_raw[python]
	fi

	if [ $1 != "upgrade" ]; then
		update-alternatives --verbose --remove undill %p/bin/undill-py%type_raw[python]
	fi
<<

DocFiles: LICENSE README.md
Homepage: https://github.com/uqfoundation/dill

DescDetail: <<
dill extends Python's pickle module for serializing and de-serializing
Python objects to the majority of the built-in Python types.
Serialization is the process of converting an object to a byte stream,
and the inverse of which is converting a byte stream back to a Python
object hierarchy.
<<

# Info2
<<
