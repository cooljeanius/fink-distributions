Info2: <<
Package: autocommand-py%type_pkg[python]
Version: 2.2.2
Revision: 1
Description: Create a command-line program from a function
License: BSD
# Free to modify, update, and take over
Maintainer: Hanspeter Niederstrasser <nieder@users.sourceforge.net>
Type: python (3.7 3.8 3.9 3.10)
Depends: <<
	python%type_pkg[python]
<<
BuildDepends: <<
	bootstrap-modules-py%type_pkg[python],
	setuptools-tng-py%type_pkg[python] (>= 56)
<<
Source: https://files.pythonhosted.org/packages/source/a/autocommand/autocommand-%v.tar.gz
Source-Checksum: SHA256(878de9423c5596491167225c2a455043c3130fb5b7286ac83443d45e74955f34)
CompileScript: <<
	PYTHONPATH=%p/share/bootstrap-modules-python%type_pkg[python] %p/bin/python%type_raw[python] -m build --wheel --no-isolation --skip-dependency-check
<<
InfoTest: <<
	TestDepends: <<
		coverage-py%type_pkg[python],
		pytest-py%type_pkg[python],
		pytest-cov-py%type_pkg[python]
	<<
	TestScript: <<
		PYTHONPATH=%b/build/lib %p/bin/python%type_raw[python] -m pytest -vv || exit 2
	<<
<<
InstallScript: <<
	PYTHONPATH=%p/share/bootstrap-modules-python%type_pkg[python] %p/bin/python%type_raw[python] -m installer --destdir %d dist/*.whl
<<
DocFiles: LICENSE README.md
Homepage: https://github.com/Lucretiel/autocommand
DescDetail: <<
Autocommand turns a function into a command-line program. It converts
the function's parameter signature into command-line arguments, and
automatically runs the function if the module was called as __main__. In
effect, it lets your create a smart main function.
<<
<<
