Package: node-pseudorandombytes
Version: 2.0.0
Revision: 1.1.1
###
BuildDepends: <<
	fink (>= 0.32)
<<
Depends: <<
	node-create-hash (>= 1.1.2),
	node-create-hmac (>= 1.1.4),
	node-randombytes (>= 2.0.0),
	nodejs
<<
###
Source: mirror:debian:/pool/main/n/%n/%n_%v.orig.tar.gz
Source-Checksum: SHA256(cb8fc9f536ceb16d9379e185e1afd34cf549e193b664a25f03c0cb71a409aa3d)
SourceDirectory: pseudorandombytes-%v
Source2: mirror:debian:pool/main/n/%n/%n_%v-1.1.debian.tar.xz
Source2-Checksum: SHA256(a96fc7de137f0e11905c3b0a2e1db8db73a601418e5dbefee1a66265c566c66b)
Source2ExtractDir: pseudorandombytes-%v
###
DocFiles: readme.md
###
CompileScript: <<
mkdir -p node_modules/pseudorandombytes
cp *.js node_modules/pseudorandombytes/
cp package.json node_modules/pseudorandombytes/
<<
InfoTest: <<
	TestScript: <<
chmod +x debian/tests/require
NODE_PATH=%b/node_modules debian/tests/require || exit 2
	<<
<<
InstallScript: <<
install -d -m0755 %i/share/nodejs
cp -R node_modules/pseudorandombytes %i/share/nodejs/
<<
###
Description: -crypto.pseudoRandomBytes- for browserify
DescDetail: <<
In node it just returns crypto.pseudoRandomBytes but in the browser it uses
randombytes module if available else it seeds a prng based on chacha20poly1305
.
To be clear there is no legitimate reason for you ever to want to use this.
The algorithms used in this module are **NOT** suitable for cryptographical
usage.
.
This package is provided **ONLY** to run tests of node-crypto-browserify.
.
Node.js is an event-based server-side JavaScript engine.
<<
###
License: BSD
Homepage: https://github.com/crypto-browserify/pseudorandombytes#readme
Maintainer: Justin F. Hallett <thesin@users.sourceforge.net>
